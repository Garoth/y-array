{"version":3,"sources":["../yjs/node_modules/browser-pack/_prelude.js","src/Array.js","y-array.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","extend","Y","YArray","_Y$utils$CustomType","os","_model","_content","this","_this","getPrototypeOf","eventHandler","utils","EventHandler","op","struct","pos","left","findIndex","c","compareIds","id","values","hasOwnProperty","splice","type","opContent","getType","contents","content","map","val","apply","concat","callEventListeners","object","index","inDeletionRange","delLength","target","_values","_createClass","key","destroy","undefined","_this2","x","insert","Array","mostLeft","ops","prevId","typeDefinition","origin","parent","isTypeDefinition","push","getNextOpId","typeid","createType","requestTransaction","regeneratorRuntime","mark","_callee","mostRight","ml","j","wrap","_context","prev","next","delegateYield","getInsertionCleanEnd","t0","right","getOperation","t1","start","awaitOps","applyCreatedOperations","stop","awaitAndPrematurelyCall","dels","targetId","_callee2","_context2","addEventListener","removeEventListener","_changed","transaction","_context3","deleted","getInsertion","abrupt","store","initType","receivedOp","get","CustomType","CustomTypeDefinition","name","class","YArrayInitializer","model","_types","_context4","Struct","List","forEach","defineProperties","props","descriptor","defineProperty","protoProps","staticProps"],"mappings":"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","file":"y-array.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* global Y */\n'use strict'\n\nfunction extend (Y) {\n  class YArray extends Y.utils.CustomType {\n    constructor (os, _model, _content) {\n      super()\n      this.os = os\n      this._model = _model\n      // Array of all the neccessary content\n      this._content = _content\n      // this._debugEvents = [] // TODO: remove!!\n      this.eventHandler = new Y.utils.EventHandler((op) => {\n        // this._debugEvents.push(JSON.parse(JSON.stringify(op)))\n        if (op.struct === 'Insert') {\n          let pos\n          // we check op.left only!,\n          // because op.right might not be defined when this is called\n          if (op.left === null) {\n            pos = 0\n          } else {\n            pos = 1 + this._content.findIndex(function (c) {\n              return Y.utils.compareIds(c.id, op.left)\n            })\n            if (pos <= 0) {\n              throw new Error('Unexpected operation!')\n            }\n          }\n          var values\n          var length\n          if (op.hasOwnProperty('opContent')) {\n            this._content.splice(pos, 0, {\n              id: op.id,\n              type: op.opContent\n            })\n            length = 1\n            values = [this.os.getType(op.opContent)]\n          } else {\n            var contents = op.content.map(function (c, i) {\n              return {\n                id: [op.id[0], op.id[1] + i],\n                val: c\n              }\n            })\n            // insert value in _content\n            this._content.splice.apply(this._content, [pos, 0].concat(contents))\n            values = op.content\n            length = op.content.length\n          }\n          this.eventHandler.callEventListeners({\n            type: 'insert',\n            object: this,\n            index: pos,\n            values: values,\n            length: length\n          })\n        } else if (op.struct === 'Delete') {\n          var i = 0 // current position in _content\n          for (; i < this._content.length && op.length > 0; i++) {\n            var c = this._content[i]\n            if (Y.utils.inDeletionRange(op, c.id)) {\n              // is in deletion range!\n              var delLength\n              // check how many character to delete in one flush\n              for (delLength = 1;\n                    delLength < op.length && i + delLength < this._content.length && Y.utils.inDeletionRange(op, this._content[i + delLength].id);\n                    delLength++) {}\n              // last operation that will be deleted\n              c = this._content[i + delLength - 1]\n              // update delete operation\n              op.length -= c.id[1] - op.target[1] + 1\n              op.target = [c.id[0], c.id[1] + 1]\n              // apply deletion & find send event\n              let content = this._content.splice(i, delLength)\n              let values = content.map((c) => {\n                if (c.val != null) {\n                  return c.val\n                } else {\n                  return this.os.getType(c.type)\n                }\n              })\n              this.eventHandler.callEventListeners({\n                type: 'delete',\n                object: this,\n                index: i,\n                values: values,\n                _content: content,\n                length: delLength\n              })\n              // with the fresh delete op, we can continue\n              // note: we don't have to increment i, because the i-th content was deleted\n              // but on the other had, the (i+delLength)-th was not in deletion range\n              // So we don't do i--\n            }\n          }\n        } else {\n          throw new Error('Unexpected struct!')\n        }\n      })\n    }\n    _destroy () {\n      this.eventHandler.destroy()\n      this.eventHandler = null\n      this._content = null\n      this._model = null\n      this.os = null\n    }\n    get length () {\n      return this._content.length\n    }\n    get (pos) {\n      if (pos == null || typeof pos !== 'number') {\n        throw new Error('pos must be a number!')\n      }\n      if (pos >= this._content.length) {\n        return undefined\n      }\n      if (this._content[pos].type == null) {\n        return this._content[pos].val\n      } else {\n        return this.os.getType(this._content[pos].type)\n      }\n    }\n    toArray () {\n      return this._content.map((x, i) => {\n        if (x.type != null) {\n          return this.os.getType(x.type)\n        } else {\n          return x.val\n        }\n      })\n    }\n    push (contents) {\n      return this.insert(this._content.length, contents)\n    }\n    insert (pos, contents) {\n      if (typeof pos !== 'number') {\n        throw new Error('pos must be a number!')\n      }\n      if (!(contents instanceof Array)) {\n        throw new Error('contents must be an Array of objects!')\n      }\n      if (contents.length === 0) {\n        return\n      }\n      if (pos > this._content.length || pos < 0) {\n        throw new Error('This position exceeds the range of the array!')\n      }\n      var mostLeft = pos === 0 ? null : this._content[pos - 1].id\n\n      var ops = []\n      var prevId = mostLeft\n      for (var i = 0; i < contents.length;) {\n        var op = {\n          left: prevId,\n          origin: prevId,\n          // right: mostRight,\n          // NOTE: I intentionally do not define right here, because it could be deleted\n          // at the time of inserting this operation (when we get the transaction),\n          // and would therefore not defined in this._content\n          parent: this._model,\n          struct: 'Insert'\n        }\n        var _content = []\n        var typeDefinition\n        while (i < contents.length) {\n          var val = contents[i++]\n          typeDefinition = Y.utils.isTypeDefinition(val)\n          if (!typeDefinition) {\n            _content.push(val)\n          } else if (_content.length > 0) {\n            i-- // come back again later\n            break\n          } else {\n            break\n          }\n        }\n        if (_content.length > 0) {\n          // content is defined\n          op.content = _content\n          op.id = this.os.getNextOpId(_content.length)\n        } else {\n          // otherwise its a type\n          var typeid = this.os.getNextOpId(1)\n          this.os.createType(typeDefinition, typeid)\n          op.opContent = typeid\n          op.id = this.os.getNextOpId(1)\n        }\n        ops.push(op)\n        prevId = op.id\n      }\n      var eventHandler = this.eventHandler\n      this.os.requestTransaction(function *() {\n        // now we can set the right reference.\n        var mostRight\n        if (mostLeft != null) {\n          var ml = yield* this.getInsertionCleanEnd(mostLeft)\n          mostRight = ml.right\n        } else {\n          mostRight = (yield* this.getOperation(ops[0].parent)).start\n        }\n        for (var j = 0; j < ops.length; j++) {\n          var op = ops[j]\n          op.right = mostRight\n        }\n        yield* eventHandler.awaitOps(this, this.applyCreatedOperations, [ops])\n      })\n      // always remember to do that after this.os.requestTransaction\n      // (otherwise values might contain a undefined reference to type)\n      eventHandler.awaitAndPrematurelyCall(ops)\n    }\n    delete (pos, length) {\n      if (length == null) { length = 1 }\n      if (typeof length !== 'number') {\n        throw new Error('length must be a number!')\n      }\n      if (typeof pos !== 'number') {\n        throw new Error('pos must be a number!')\n      }\n      if (pos + length > this._content.length || pos < 0 || length < 0) {\n        throw new Error('The deletion range exceeds the range of the array!')\n      }\n      if (length === 0) {\n        return\n      }\n      var eventHandler = this.eventHandler\n      var dels = []\n      for (var i = 0; i < length; i = i + delLength) {\n        var targetId = this._content[pos + i].id\n        var delLength\n        // how many insertions can we delete in one deletion?\n        for (delLength = 1; i + delLength < length; delLength++) {\n          if (!Y.utils.compareIds(this._content[pos + i + delLength].id, [targetId[0], targetId[1] + delLength])) {\n            break\n          }\n        }\n        dels.push({\n          target: targetId,\n          struct: 'Delete',\n          length: delLength\n        })\n      }\n      this.os.requestTransaction(function *() {\n        yield* eventHandler.awaitOps(this, this.applyCreatedOperations, [dels])\n      })\n      // always remember to do that after this.os.requestTransaction\n      // (otherwise values might contain a undefined reference to type)\n      eventHandler.awaitAndPrematurelyCall(dels)\n    }\n    observe (f) {\n      this.eventHandler.addEventListener(f)\n    }\n    unobserve (f) {\n      this.eventHandler.removeEventListener(f)\n    }\n    * _changed (transaction, op) {\n      if (!op.deleted) {\n        if (op.struct === 'Insert') {\n          // update left\n          var l = op.left\n          var left\n          while (l != null) {\n            left = yield* transaction.getInsertion(l)\n            if (!left.deleted) {\n              break\n            }\n            l = left.left\n          }\n          op.left = l\n          // if op contains opContent, initialize it\n          if (op.opContent != null) {\n            yield* transaction.store.initType.call(transaction, op.opContent)\n          }\n        }\n        this.eventHandler.receivedOp(op)\n      }\n    }\n  }\n\n  Y.extend('Array', new Y.utils.CustomTypeDefinition({\n    name: 'Array',\n    class: YArray,\n    struct: 'List',\n    initType: function * YArrayInitializer (os, model) {\n      var _content = []\n      var _types = []\n      yield* Y.Struct.List.map.call(this, model, function (op) {\n        if (op.hasOwnProperty('opContent')) {\n          _content.push({\n            id: op.id,\n            type: op.opContent\n          })\n          _types.push(op.opContent)\n        } else {\n          op.content.forEach(function (c, i) {\n            _content.push({\n              id: [op.id[0], op.id[1] + i],\n              val: op.content[i]\n            })\n          })\n        }\n      })\n      for (var i = 0; i < _types.length; i++) {\n        yield* this.store.initType.call(this, _types[i])\n      }\n      return new YArray(os, model.id, _content)\n    },\n    createType: function YArrayCreateType (os, model) {\n      return new YArray(os, model.id, [])\n    }\n  }))\n}\n\nmodule.exports = extend\nif (typeof Y !== 'undefined') {\n  extend(Y)\n}\n",null],"sourceRoot":"/source/"}